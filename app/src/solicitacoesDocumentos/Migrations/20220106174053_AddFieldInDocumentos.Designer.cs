// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using solicitacoesDocumentos;

namespace teste_react.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20220106174053_AddFieldInDocumentos")]
    partial class AddFieldInDocumentos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("EPerfilEUser", b =>
                {
                    b.Property<int>("perfilsid")
                        .HasColumnType("int");

                    b.Property<int>("usuariosid")
                        .HasColumnType("int");

                    b.HasKey("perfilsid", "usuariosid");

                    b.HasIndex("usuariosid");

                    b.ToTable("EPerfilEUser");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.EDocumentos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Solicitacaoid")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("fileName")
                        .HasColumnType("text");

                    b.Property<string>("origem")
                        .HasColumnType("text");

                    b.Property<string>("path")
                        .HasColumnType("text");

                    b.Property<int>("size")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Solicitacaoid");

                    b.ToTable("documentos");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.EMotivoSolicitacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("descMotivo")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("motivo_solicitacao");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.EPerfil", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("chave")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("descricao")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("profile");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.ESolicitacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPFPaciente")
                        .HasColumnType("text");

                    b.Property<string>("CPFSolicitante")
                        .HasColumnType("text");

                    b.Property<int>("ConfirmacaoLeitura")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascPaciente")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("GrauParentesco")
                        .HasColumnType("text");

                    b.Property<int?>("MotivoSolicitacaoid")
                        .HasColumnType("int");

                    b.Property<string>("NomePaciente")
                        .HasColumnType("text");

                    b.Property<string>("NomeSolicitannte")
                        .HasColumnType("text");

                    b.Property<string>("RGPaciente")
                        .HasColumnType("text");

                    b.Property<string>("RGSolicitante")
                        .HasColumnType("text");

                    b.Property<int?>("StatusSolicitacaoid")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("text");

                    b.Property<int?>("TipoDocumentoid")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRequerenteid")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRetiradaid")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.HasKey("id");

                    b.HasIndex("MotivoSolicitacaoid");

                    b.HasIndex("StatusSolicitacaoid");

                    b.HasIndex("TipoDocumentoid");

                    b.HasIndex("TipoRequerenteid");

                    b.HasIndex("TipoRetiradaid");

                    b.ToTable("solicitacao");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.EStatusSolicitacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("descStatus")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("status_solicitacao");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.ETipoDocumento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("descDocumento")
                        .HasColumnType("text");

                    b.Property<string>("prazo")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tipo_documento");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.ETipoRequerente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("descRequerente")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tipo_requerente");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.ETipoRetirada", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("descRetirada")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("tipo_retirada");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.EUser", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("EPerfilEUser", b =>
                {
                    b.HasOne("solicitacoesDocumentos.Models.Entity.EPerfil", null)
                        .WithMany()
                        .HasForeignKey("perfilsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("solicitacoesDocumentos.Models.Entity.EUser", null)
                        .WithMany()
                        .HasForeignKey("usuariosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.EDocumentos", b =>
                {
                    b.HasOne("solicitacoesDocumentos.Models.Entity.ESolicitacao", "Solicitacao")
                        .WithMany("Documentos")
                        .HasForeignKey("Solicitacaoid");

                    b.Navigation("Solicitacao");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.ESolicitacao", b =>
                {
                    b.HasOne("solicitacoesDocumentos.Models.Entity.EMotivoSolicitacao", "MotivoSolicitacao")
                        .WithMany()
                        .HasForeignKey("MotivoSolicitacaoid");

                    b.HasOne("solicitacoesDocumentos.Models.Entity.EStatusSolicitacao", "StatusSolicitacao")
                        .WithMany()
                        .HasForeignKey("StatusSolicitacaoid");

                    b.HasOne("solicitacoesDocumentos.Models.Entity.ETipoDocumento", "TipoDocumento")
                        .WithMany()
                        .HasForeignKey("TipoDocumentoid");

                    b.HasOne("solicitacoesDocumentos.Models.Entity.ETipoRequerente", "TipoRequerente")
                        .WithMany()
                        .HasForeignKey("TipoRequerenteid");

                    b.HasOne("solicitacoesDocumentos.Models.Entity.ETipoRetirada", "TipoRetirada")
                        .WithMany()
                        .HasForeignKey("TipoRetiradaid");

                    b.Navigation("MotivoSolicitacao");

                    b.Navigation("StatusSolicitacao");

                    b.Navigation("TipoDocumento");

                    b.Navigation("TipoRequerente");

                    b.Navigation("TipoRetirada");
                });

            modelBuilder.Entity("solicitacoesDocumentos.Models.Entity.ESolicitacao", b =>
                {
                    b.Navigation("Documentos");
                });
#pragma warning restore 612, 618
        }
    }
}
